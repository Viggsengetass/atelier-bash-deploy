#!/bin/bash

# Chargement des variables depuis le fichier .env
source .env

# üîí V√©rification que la branche active est 'main'
BRANCH=$(git rev-parse --abbrev-ref HEAD)
if [ "$BRANCH" != "main" ]; then
  echo "‚ùå D√©ploiement interdit : vous √™tes sur la branche '$BRANCH'"
  exit 1
fi

# üß≠ Menu CLI
case "$1" in
  deploy)
    echo "üöÄ D√©ploiement en cours..."
    mkdir -p "$DEPLOY_DIR"
    mkdir -p "$BACKUP_DIR"

    if [ -d "$SRC_DIR" ]; then
      # Sauvegarde de l‚Äôancien d√©ploiement
      TIMESTAMP=$(date +%Y%m%d_%H%M%S)
      BACKUP_PATH="$BACKUP_DIR/deploy_$TIMESTAMP"
      cp -r "$DEPLOY_DIR" "$BACKUP_PATH"
      echo "üóÇÔ∏è  Backup cr√©√© dans $BACKUP_PATH"

      # D√©ploiement
      cp -r "$SRC_DIR"/* "$DEPLOY_DIR"
      echo "‚úÖ Fichiers copi√©s dans $DEPLOY_DIR"
      echo "D√©ploiement effectu√© le $(date)" >> "$LOG_FILE"

      # Notification (Windows)
      start "" "$DEPLOY_DIR/index.html"

      # Linux (d√©commenter si besoin)
      # notify-send "D√©ploiement termin√©" "Le d√©ploiement s'est bien d√©roul√©."
      # xdg-open "$DEPLOY_DIR/index.html"

    else
      echo "‚ùå Erreur : dossier $SRC_DIR introuvable"
      exit 1
    fi
    ;;

  rollback)
    echo "‚ôªÔ∏è  Restauration de la version pr√©c√©dente..."
    LAST_BACKUP=$(ls -td $BACKUP_DIR/* | head -1)
    if [ -d "$LAST_BACKUP" ]; then
      cp -r "$LAST_BACKUP"/* "$DEPLOY_DIR"
      echo "‚úÖ Rollback effectu√© depuis $LAST_BACKUP"
    else
      echo "‚ùå Aucun backup trouv√©"
    fi
    ;;

  status)
    echo "üìÑ Derniers logs de d√©ploiement :"
    tail -n 5 "$LOG_FILE"
    ;;

  *)
    echo "Usage: $0 {deploy|status|rollback}"
    exit 1
    ;;
esac
